# Nome do workflow
name: Run Unit Tests

# Quando queremos que seja executado o workflow 
# Toda fez que houver push no repositório executa
on: [push]

# Pode configurar vários trabalhos que queremos que sejam executados
jobs:
  # Trabalho a ser executado
  run-unit-tests: 
    # Nome do job
    name: Run Unit Tests
    # Queremos executar dentro de uma máquina Ubuntu usando a última versão
    runs-on: ubuntu-latest

    # Ações/passos que serão executadas
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      # ci, vai fazer um yarn intall, mas não vai fazer nenhum interação com o usuário
      # que está digitando o comando. E o yarn install, vai fazer uma interação.
      # Nãi vai fazer nenhuma pergunta, não vai atualizar versão, não vai mexer no package-lock.json
      # Porém npm ci é para projeto construido com o NPM
      # Para projetos contruídos com o Yarn o comaando é: yarn install --frozen-lockfile

      # Nota: O "npm ci" é usado para instalar as dependências exatamente como estão 
      # especificadas no arquivo package-lock.json, ignorando qualquer alteração no 
      # arquivo package.json. O equivalente no Yarn, "--frozen-lockfile", também garante 
      # que as dependências sejam instaladas exatamente como estão no arquivo yarn.lock, 
      # sem levar em consideração qualquer alteração no arquivo package.json. Isso ajuda 
      #  garantir que as dependências sejam instaladas de forma consistente, especialmente 
      # m ambientes de produção ou quando você deseja replicar exatamente o conjunto de 
      # dependências de um projeto em diferentes máquinas.

      # - run: npm ci
      - run: yarn install --frozen-lockfile

      - run: yarn test